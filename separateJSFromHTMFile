#! /bin/bash -
#从.htm文件中提取javascript代码（只有一段内嵌代码时），并保存到.js/目录下同名.js文件中，然后重命名.htm为.html文件，并清除内嵌javascript代码，增加js文件引用。
LC_ALL=C
path="."
jsFolderName="js"
sourceHTMLFileType=".htm"
destinationHTMLFileType=".htm"
### startRegion Option
#while getopts "p:t:r:f:" optname
#do
#    case "$optname" in
#        "p")
#            path=$OPTARG
#        ;;
#        "s")
#            sourceHTMLFileType=$OPTARG
#        ;;
#		"d")
#			destinationHTMLFileType=$OPTARG
#		;;
#        "f")
#            targetFileName=$OPTARG
#        ;;
#        "?")
#            echo "unknown option $OPTARG"
#        ;;
#        ":")
#            echo "No argument value for option $OPTARG"
#        ;;
#        *)
#        ## should not occur
#            echo "unknown error while processing options"
#        ;;
#    esac
#done
### endRegion Option
## STARTRegion LongOption
# from /usr/share/doc/util-linux/examples/getopt-parse.bash
# Note that we use `"$@"' to let each command-line parameter expand to a 
# separate word. The quotes around `$@' are essential!
# We need TEMP as the `eval set --' would nuke the return value of getopt.
TEMP=`getopt -o p:s:d: --long path:,sourceHTMLFileType:,destinationHTMLFileType: \
     -n 'example.bash' -- "$@"`

if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi
# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

while true ; do
	case "$1" in
		-p|--path) path=$2 ; shift 2 ;;
		-s|--sourceHTMLFileType) sourceHTMLFileType=$2 ; shift 2 ;;
			## c has an optional argument. As we are in quoted mode,
			## an empty parameter will be generated if its optional
			## argument is not found.
			#case "$2" in
			#	"") echo "Option sourceHTMLFileType, no argument"; shift 2 ;;
			#	*)  echo "Option sourceHTMLFileType, argument \`$2'"; sourceHTMLFileType=$2 ; shift 2 ;;
			#esac ;;
		-d|--destinationHTMLFileType) destinationHTMLFileType=$2 ; shift 2 ;;
		--) shift ; break ;;
		*) echo "Internal error!" ; exit 1 ;;
	esac
done
if [ 0 -ne ${#1} ];
then
	echo "Remaining arguments:";
	for arg do echo '--> '"\`$arg'" ; done
fi
## ENDRegion LongOption

# pre-format parameters
path=${path%\/}"/"
jsFolderName=${jsFolderName%%\/*}
echo $path
echo $jsFolderName
for fileName in $(grep "<script type=\"text\/javascript\">" -rl --include=*${sourceHTMLFileType} --exclude=*.git* --exclude=*.svn* --exclude=*.swp ${path})
do
	echo ">>--------------------------"
	#pre-deal $fileName
	fileName=${fileName#${path}}
	#create folder for .js file
	mkdir -p ${path}${jsFolderName}
	echo "Found ${sourceHTMLFileType} file: ${fileName}"
	jsFileName=${fileName##.*\/}
	jsFileName=${jsFileName%${sourceHTMLFileType}}".js"
	#copy javascript code from htm file and write to js file.
	jsFileDir=${path}${jsFolderName}"/"${jsFileName}
	echo "--> jsFileDir: "${jsFileDir}
	sed -n -e "/<script\ type=\"text\/javascript\">/,/<\/script>/w ${jsFileDir}" ${path}${fileName}
	sed -i -e "/<script\ type=\"text\/javascript\">$/d" -e "/<\/script>$/d" ${jsFileDir}
	echo ".js file:"${jsFileDir}" is created."
	#rename htm file to html
	mv ${path}${fileName} ${path}${fileName%${sourceHTMLFileType}}${destinationHTMLFileType}
	echo "${path}${fileName} is renamed to ${path}${fileName%${sourceHTMLFileType}}${destinationHTMLFileType}"
	fileName=${fileName%${sourceHTMLFileType}}${destinationHTMLFileType}
	#rm javascript code from html file
	regStr='\t<script type="text/javascript" src="'${jsFolderName}'/'${jsFileName}'"></script>\n</head>'
	regStr=${regStr//\//\\\/}
	regStr=${regStr//\ /\\\ }
	sed -i -e "/<script\ type=\"text\/javascript\">/,/<\/script>/g" -e "/^$/d" -e "s/<\/head>/${regStr}/g" ${path}${fileName}
	echo "Removed js code from ${sourceHTMLFileType} file."
	#sed -i -e "/<script\ type=\"text\/javascript\">/,/<\/script>/g" -e "/^$/d" ${fileName}
	#sed -i -e "s/<\/head>/${regStr}/g" ${fileName}
done
echo "Done."
